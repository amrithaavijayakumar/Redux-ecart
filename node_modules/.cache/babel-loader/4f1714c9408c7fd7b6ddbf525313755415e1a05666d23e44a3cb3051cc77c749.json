{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: [],\n  reducers: {\n    //add to cart\n    addToCart: (state, action) => {\n      state.push(action.payload);\n    },\n    //delete\n    deleteFromCart: (state, action) => {\n      return state.filter(item => item.id != action.payload);\n    },\n    emptyCart: state => {}\n  }\n});\nexport const {\n  addToCart,\n  deleteFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","reducers","addToCart","state","action","push","payload","deleteFromCart","filter","item","id","emptyCart","actions","reducer"],"sources":["C:/Users/amrit/OneDrive - INFINITY/Documents/05 REACT/Redux-ecart/src/Redux/Slice/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: [],\r\n  reducers: {\r\n    //add to cart\r\n    addToCart: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    //delete\r\n    deleteFromCart: (state, action) => {\r\n      return state.filter((item) => item.id != action.payload);\r\n    },\r\n\r\n    emptyCart:((state)=>{\r\n      \r\n    })\r\n  },\r\n});\r\n\r\nexport const { addToCart,deleteFromCart } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACR;IACAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACD;IACAC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjC,OAAOD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACE,OAAO,CAAC;IAC1D,CAAC;IAEDK,SAAS,EAAGR,KAAK,IAAG,CAEpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAED,SAAS;EAACK;AAAe,CAAC,GAAGT,SAAS,CAACc,OAAO;AAC7D,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}